{"version":3,"sources":["components/Button.js","components/NewNoteForm.js","components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Button","props","react_default","a","createElement","onClick","text","NewNoteForm","onSubmit","value","onChange","type","Note","label","note","important","content","components_Button","toggleImportance","services_notes","getAll","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","request","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","newObject","_context2","post","_x","update","_ref3","_callee3","id","_context3","put","concat","_x2","_x3","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","slicedToArray","notes","setNotes","_useState3","_useState4","_useState5","_useState6","newNote","setNewNote","_useState7","_useState8","showAll","setShowAll","_useState9","_useState10","errorMessage","useEffect","noteService","then","initialNotes","notesToShow","filter","buttonText","components_Notification","map","components_Note","key","find","noteToToggle","changedNote","objectSpread","returnedNote","toggleImportanceOf","components_NewNoteForm","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","target","components_Footer","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b6ac7e24.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <div>\n      <button onClick={props.onClick}>{props.text}</button>\n    </div>\n  );\n};\n\nexport default Button;","import React from \"react\";\n\nconst NewNoteForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <h2>Add New Contact</h2>\n      <div>\n        name : <input value={props.value} onChange={props.onChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewNoteForm;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Note = (props) => {\n  const label = props.note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li>\n      {props.note.content}\n      <Button onClick={props.toggleImportance} text={label} />\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = async () => {\n    const request = axios.get(baseUrl)\n    const response = await request\n    return response.data\n}\n\nconst create = async newObject => {\n    const request = axios.post(baseUrl, newObject)\n    const response = await request\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    const response = await request\n    return response.data\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update \n}","import React from \"react\";\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n  \n    return <div className=\"error\">{message}</div>;\n};\n  \nexport default Notification;\n  ","import React from \"react\";\n\nconst Footer = () => {\n    const footerStyle = {\n      color: \"green\",\n      fontStyle: \"italic\",\n      fontSize: 16\n    };\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>\n          Note app, Department of Computer Science, University of Helsinki 2022\n        </em>\n      </div>\n    );\n};\n  \nexport default Footer;\n  ","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"./components/Button\";\nimport NewNoteForm from \"./components/NewNoteForm\";\nimport Note from \"./components/Note\";\nimport Notes from \"./components/Notes\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const hook = () => {\n    const promise = noteService.getAll();\n    const eventHandler = (initialNotes) => {\n      setNotes(initialNotes);\n    };\n    promise.then(eventHandler);\n  };\n  useEffect(hook, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    const promise = noteService.create(noteObject);\n    const eventHandler = (returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    };\n    promise.then(eventHandler);\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((noteToToggle) => noteToToggle.id === id);\n    const changedNote = { ...note, important: !note.important };\n    const promise = noteService.update(id, changedNote);\n    const eventHandler = (returnedNote) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n    };\n  \n    const errorHandler = (error) => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter((n) => n.id !== id));\n    };\n    promise.then(eventHandler)//.catch(errorHandler);\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const selectNote = (noteData) => {\n    setSelectedNote(noteData)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n  const buttonText = showAll ? \"show important\" : \"show all\";\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <Button onClick={() => setShowAll(!showAll)} text={buttonText} />\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      {/*<Notes notes={notesToShow} \n                   selectNote={selectNote}\n                   selectedNote={selectedNote}\n                   toggleImportanceOf={toggleImportanceOf}\n        />*/}\n      <NewNoteForm\n        onSubmit={addNote}\n        value={newNote}\n        onChange={handleNoteChange}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}