{"version":3,"sources":["components/Button.js","components/Note.js","components/Notification.js","components/LoginForm.js","components/Footer.js","components/Togglable.js","components/NoteForm.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Button","props","react_default","a","createElement","onClick","text","Note","label","note","important","content","components_Button","toggleImportance","Notification","_ref","message","className","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","Footer","style","color","fontStyle","fontSize","Togglable","forwardRef","ref","_useState","useState","_useState2","Object","slicedToArray","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","NoteForm","createNote","newNote","setNewNote","event","preventDefault","Math","random","target","token","services_notes","getAll","axios","get","then","response","data","create","asyncToGenerator","regenerator_default","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","arguments","update","id","put","concat","setToken","newToken","services_login","login","credentials","App","notes","setNotes","_useState3","_useState4","showAll","setShowAll","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","setUsername","_useState9","_useState10","setPassword","_useState11","_useState12","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","_user2","loginService","setItem","stringify","t0","setTimeout","notesToShow","filter","noteFormRef","useRef","components_Notification","components_Togglable","components_LoginForm","_ref2","_ref3","name","removeItem","location","href","components_NoteForm","noteObject","current","returnedNote","map","components_Note","key","find","n","changedNote","objectSpread","catch","error","toggleImportanceOf","components_Footer","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.52c2a59e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <div>\n      <button onClick={props.onClick}>{props.text}</button>\n    </div>\n  );\n};\n\nexport default Button;","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Note = (props) => {\n  const label = props.note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li>\n      {props.note.content}\n      <Button onClick={props.toggleImportance} text={label} />\n    </li>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n  \n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n  \nexport default Notification","import React from 'react';\n\nconst LoginForm = ({\n    handleSubmit,\n    handleUsernameChange,\n    handlePasswordChange,\n    username,\n    password\n   }) => {\n    return (\n        <div>\n            <h2>Login</h2>\n        \n            <form onSubmit={handleSubmit}>\n                <div>\n                    username\n                    <input value={username}\n                                onChange={handleUsernameChange}\n                    />\n                </div>\n                <div>\n                    password\n                    <input type=\"password\"\n                                value={password}\n                                onChange={handlePasswordChange}\n                    />\n                </div>\n                <button type=\"submit\">login</button>\n            </form>\n        </div>\n    )\n}\n \nexport default LoginForm","import React from \"react\";\n\nconst Footer = () => {\n    const footerStyle = {\n      color: \"green\",\n      fontStyle: \"italic\",\n      fontSize: 16\n    };\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>\n          Note app, Department of Computer Science, University of Helsinki 2022\n        </em>\n      </div>\n    );\n};\n  \nexport default Footer;\n  ","import React from 'react';\nimport { useState, forwardRef, useImperativeHandle } from 'react'\n\nconst Togglable = forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n})\n\nexport default Togglable","import React from 'react';\nimport { useState } from 'react' \n\nconst NoteForm = ({ createNote }) => {\n    const [newNote, setNewNote] = useState('') \n\n    const handleChange = (event) => {\n        setNewNote(event.target.value)\n    }\n\n    const addNote = (event) => {\n        event.preventDefault()\n        createNote({\n            content: newNote,\n            important: Math.random() > 0.5,\n        })\n\n        setNewNote('')\n    }\n\n    return (\n        <div>\n            <h2>Create a new note</h2>\n\n            <form onSubmit={addNote}>\n                <input value={newNote}\n                            onChange={handleChange}\n                />\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NoteForm","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${ baseUrl }/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React from 'react';\nimport { useState, useEffect, useRef } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Footer from './components/Footer'\nimport Togglable from './components/Togglable'\nimport NoteForm from './components/NoteForm'\n\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [username, setUsername] = useState('') \n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            noteService.setToken(user.token)\n        }\n    }, [])\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const user = await loginService.login({\n                username, password,\n            })\n            setUser(user)\n            noteService.setToken(user.token)\n            window.localStorage.setItem(\n                'loggedNoteappUser', JSON.stringify(user)\n            ) \n            setUsername('')\n            setPassword('')\n        } catch (exception) {\n            setErrorMessage('wrong credentials')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem('loggedNoteappUser');\n        window.location.href = \"/login\";\n    }\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n    \n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n    const addNote = (noteObject) => {\n        noteFormRef.current.toggleVisibility()\n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote))\n            })\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n    \n    const noteFormRef = useRef()\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message = {errorMessage} />\n\n            {user === null ?\n                <Togglable buttonLabel = 'login'>\n                    <LoginForm  username = {username}\n                                        password = {password}\n                                        handleUsernameChange = {({ target }) => setUsername(target.value)}\n                                        handlePasswordChange = {({ target }) => setPassword(target.value)}\n                                        handleSubmit = {handleLogin}\n                    />\n                </Togglable> :\n                <div>\n                    <p>{user.name} logged in</p>\n                    <button onClick={logOut}>Logout</button>\n                    <Togglable buttonLabel = \"new note\" ref = {noteFormRef}>\n                        <NoteForm createNote = {addNote} />\n                    </Togglable>\n                </div>\n            }\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all' }\n                </button>\n            </div>   \n            <ul>\n                {notesToShow.map(note => \n                <Note\n                    key={note.id}\n                    note={note}\n                    toggleImportance={() => toggleImportanceOf(note.id)}\n                />\n                )}\n            </ul>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}